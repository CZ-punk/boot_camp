boot_camp ( Mockito )






ProductService 를 테스트하려면 ProductService 에서 사용하는 다른 컴포넌트를 주입받아서 사용해야만 한다.

Service 의 Method 의 동작이 잘 되는지 수행하는지만 간단하게 단위 테스트를 하고 싶은데

여러 의존관계로 인해 복잡하고 더러운 코드가 된다. 어떻게 해결할 수 있을까?  MOCK !!


Mock 객체, 즉 가짜 객체를 사용해서 실제로 주입 받는 것처럼 동작하는 메서드를 구현할 수 있다.

Mock 객체의 여러 기능을 제공해주는 라이브러리 - Mockito !! ( Springboot 기본으로 제공 )





@ExtendWith(MockitoExtension.class) - @Mock 사용을 위해 설정하는 애노테이션 ( test class level )

@Mock - Mock 객체로서 사용할 component 들에 가짜 객체를 주입받아 사용

		- ex ) @Mock ProductRepository productRepository;




단위 테스트에서 ProductService 의 updateProduct() 가 잘 수행되는지 알고 싶을 때:

- ProductService 객체를 생성할 때, 파라미터로 주입 받아야 하는 Component 들은 Mock 으로 생성해서 주입

- ProductService.updateProduct() 메서드를 수행하기 위한 파라미터 세팅

	- ProductMypriceRequestDto : 관심 상품 희망가

	- Product 객체 생성을 위해 User, ProductRequestDto 객체 생성 및 주입

	- 설계된 Product 를 통해 updateProduct 를 생성하는데 Repository 의 findById 부분에서 오류

		- 해당 오류 잡는 법:

			- 세팅된 값 ( 즉, 위에서 만든 Product 객체 ) 을 findById 의 결과로서 사용하여 잡음

			  사용하는 방법:

				- BDDMockito.given() 메서드 사용

				- 파라미터로 productRepository.findById(productId)).willReturn(Optional.of(product)

				- 수행할 Component 의 메서드를 적고, .willReturn 을 통해 해당 메서드의 결과값 명시

					- 파라미터에 해당하는 메서드가 수행될 때는 항상 위에 설정한 product 객체 반환



